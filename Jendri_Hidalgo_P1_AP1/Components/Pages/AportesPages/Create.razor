@page "/Aportes/Create"
@inject AportesService aportesService;
@inject NavigationManager navigation;


<PageTitle>Agregar nuevoAporte</PageTitle> 
<EditForm Model="nuevoAporte" OnValidSubmit="GuardarPersona">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow">
            <div class="card-header text-center bg-danger text-white">
                <h4>Registrar nuevo Aporte</h4>
            </div>

            <div class="card-body">
                <!-- Campo: AporteId -->
                <div class="form-group">
                    <label for="AporteId"><strong>ID del Aporte</strong></label>
                    <InputNumber id="AporteId" class="form-control" @bind-Value="nuevoAporte.AporteId" readonly />
                    <ValidationMessage For="@(() => nuevoAporte.AporteId)" />
                </div>

                <!-- Campo: Personas -->
                <div class="form-group">
                    <label for="Personas"><strong>Persona</strong></label>
                    <InputText id="Personas" class="form-control" @bind-Value="nuevoAporte.Personas" />
                    <ValidationMessage For="@(() => nuevoAporte.Personas)" />
                </div>

                <!-- Campo: Observacion -->
                <div class="form-group">
                    <label for="Observacion"><strong>Observacion</strong></label>
                    <InputText id="Observacion" class="form-control" @bind-Value="nuevoAporte.Observacion" />
                    <ValidationMessage For="@(() => nuevoAporte.Observacion)" />
                </div>

                <!-- Campo: Monto -->
                <div class="form-group">
                    <label for="Monto"><strong>Monto</strong></label>
                    <InputNumber id="Monto" class="form-control" @bind-Value="nuevoAporte.Monto" />
                    <ValidationMessage For="@(() => nuevoAporte.Monto)" />
                </div>
            </div>

            <div class="card-footer text-center">
                <button type="submit" class="btn btn-success ml-2">Registrar</button>
                <a href="/Sistemas/Index" class="btn btn-danger ml-2">Volver</a>
            </div>
        </div>
    </div>
 </EditForm>
@code {
    public Aportes nuevoAporte = new Aportes();
    public List<Aportes> Aportes { get; set; } = new List<Aportes>();

    protected override async Task OnInitializedAsync()
    {
        Aportes = await aportesService.Listar(c => c.AporteId > 0);
    }

    public async Task<bool> Validar()
    {
        var personaDuplicada = await aportesService.BuscarPersona(nuevoAporte.Personas);
        if (personaDuplicada != null)
        {
            return false;
        }

        return true;
    }

    public async Task GuardarPersona()
    {
        if (await Validar())
        {
            await aportesService.Guardar(nuevoAporte);
            nuevoAporte = new Aportes();
            navigation.NavigateTo("/Aportes/Index");
        }
    }
}

