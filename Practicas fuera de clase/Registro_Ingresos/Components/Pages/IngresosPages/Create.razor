@page "/Ingresos/Create"
@using Registro_Ingresos.Models
@using Registro_Ingresos.Services
@inject IngresosService ingresosService
@inject NavigationManager navigation
@rendermode InteractiveServer

<PageTitle>Agregar Ingreso</PageTitle>
<EditForm Model="ingresoNuevo" OnValidSubmit="GuardarIngreso">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow">
            <div class="card-header text-center bg-danger text-white">
                <h4>Registrar Nuevo Ingreso</h4>
            </div>

            <div class="card-body">

                <!-- Campo: IngresoId -->
                <div class="form-group">
                    <label for="IngresoId"><strong>ID del Ingreso</strong></label>
                    <InputNumber id="IngresoId" class="form-control" @bind-Value="ingresoNuevo.IngresoId" readonly />
                    <ValidationMessage For="@(() => ingresoNuevo.IngresoId)" />
                </div>

                <!-- Campo: Fecha -->
                <div class="form-group">
                    <label for="fecha"><strong>Fecha del Ticket</strong></label>
                    <InputDate id="fecha" class="form-control" @bind-Value="ingresoNuevo.Fecha" />
                    <ValidationMessage For="@(() => ingresoNuevo.Fecha)" />
                </div>

                <!-- Campo: Concepto -->
                <div class="form-group">
                    <label for="Concepto"><strong>Concepto del Ingreso</strong></label>
                    <InputText id="Concepto" class="form-control" @bind-Value="ingresoNuevo.Concepto" />
                    <ValidationMessage For="@(() => ingresoNuevo.Concepto)" />
                </div>

                <!-- Campo: Monto -->
                <div class="form-group">
                    <label for="Monto"><strong>Monto</strong></label>
                    <InputNumber id="Monto" class="form-control" @bind-Value="ingresoNuevo.Monto" />
                    <ValidationMessage For="@(() => ingresoNuevo.Monto)" />
                </div>

               

            </div>

            <div class="card-footer text-center">
                <a href="/Ingresos/Index" class="btn btn-danger ml-2">Volver</a>
                <button type="submit" class="btn btn-success ml-2">Registrar</button>
            </div>

        </div>

    </div>

</EditForm>

@code {
	public Ingresos ingresoNuevo { get; set; } = new Ingresos();
	public List<Ingresos> Ingresos { get; set; } = new List<Ingresos>();
	public DateTime? Fecha { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Ingresos = await ingresosService.Listar(p => p.IngresoId > 0);
	}

	private string FechaString
	{
		get => Fecha?.ToString("yyyy-MM-dd") ?? string.Empty;
		set
		{
			if (DateTime.TryParse(value, out var parsedDate))
			{
				Fecha = parsedDate;
			}
			else
			{
				Fecha = null;
			}
		}
	}

	public async Task<bool> Validar()
	{
		var existeIngreso = await ingresosService.BuscarConcepto(ingresoNuevo.Concepto);
		return existeIngreso != null;
	}

	public async Task GuardarIngreso()
	{
		if (!await Validar())
		{
			await ingresosService.Guardar(ingresoNuevo);
			navigation.NavigateTo("/Ingresos/Index");
		}
	}
}
